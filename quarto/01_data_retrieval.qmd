# Data Retrieval

## Let's Get Started

To kick things off, we need to import the essential libraries that will empower us to interact with the SEC's data and perform insightful analysis. The magic happens when we source the necessary files via `setup.qmd`.

### Import Required Libraries {#sec-import-libraries}

To start, we need to import the required libraries. These libraries provide functions and tools that enable us to interact with the SEC's data and perform data analysis. The necessary libraries are listed in `setup.qmd`.

The data retrieval process is orchestrated using a set of functions located in separate R script files. We'll be sourcing these files via `setup.qmd` to access the functions for retrieving, processing, and analyzing SEC data.

```{r Functions_source, message=FALSE, warning=FALSE}
source("setup.qmd")           # Sourcing necessary libraries
```

This sets the stage for retrieving and working with SEC data efficiently.

## Retrieve Data from SEC {#sec-retrieve-data}

In this example, we will focus on one company, JAKKS Pacific Inc. (AAPL), as the target for our data retrieval.

### Define User Headers {#sec-user-headers}

To access the SEC API, we need to define user headers. These headers will be used for making HTTP requests to the SEC servers. We can set our user agent as an example:

```{r headers, warning=FALSE, message=FALSE}
# Define user headers
headers <- c('User-Agent' = 'email@address.com')
kable(headers, "html", class = "custom-table custom-narrow-table")
```

It's essential to set user headers as a standard practice when accessing web APIs to identify the source of the requests.

## Retrieve Company List {#sec-company-list}

Our first step in data retrieval is to obtain the list of companies available on the SEC. This list contains essential information, including the Central Index Key (CIK), which uniquely identifies each company that files reports with the SEC. We'll make an HTTP request to fetch this list:

```{r company_list, eval=TRUE, warning=FALSE, message=FALSE}
# Retrieve company list
company_List <- retrieve_Company_List(headers)
kable(head(company_List), "html", class = "custom-table custom-narrow-table")
```

## Selecting a Company: JAKKS Pacific Inc. (JAKK)

For our analysis, we'll use Janus International Group, Inc. (JBI) as the company of interest. The CIK is 0001839839.

Let's now select JAKKS Pacific Inc. by its CIK and retrieve its data from the SEC. The data we retrieve will be stored in the `company_data` object for further analysis:

```{r company_selecte, eval=TRUE, warning=FALSE, message=FALSE, paged.print=TRUE}
# Select Company by CIK
cik <- "0001839839"  # CIK for the company
company_data <- retrieve_Company_Data(headers, cik)

# this the corresponding row of the company list
company_List %>% 
  filter(cik_str == cik) %>% 
  kable("html", class = "custom-table custom-narrow-table")
```

By following these steps, we've imported the necessary libraries, sourced relevant files, and initiated the retrieval of financial data from the SEC. In the subsequent chapters, we will delve deeper into exploring and analyzing the SEC data for JAKKS Pacific Inc.

Before we move to the next chapter we save the files.

```{r save_object1, eval=TRUE, warning=FALSE, message=FALSE}
# Load company_data
saveRDS(company_data, file = "company_data.RDS") 
saveRDS(cik, file = "cik.RDS")
```
