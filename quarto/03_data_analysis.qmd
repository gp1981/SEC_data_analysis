# Data Analysis

First, we load the required libraries and files.

```{r Functions_source, message=FALSE, warning=FALSE}
source("setup.qmd")          
```

Now, let's retrieve the necessary objects for data exploration:

```{r load_object1, eval=TRUE, warning=FALSE, message=FALSE}
# Load company_Data
company_Data <- readRDS("company_data.RDS")
cik <- readRDS("cik.RDS")

# Split the lists in company_Data
company_Metadata <- company_Data$company_Metadata
company_Facts <- company_Data$company_Facts
company_Concept <- company_Data$company_Concept
```

### Rebuilding the financial reports

The use of specific labels to indicate financial report items is regulated by accounting standards set forth by authoritative bodies. In the United States, the Financial Accounting Standards Board (FASB) establishes generally accepted accounting principles (GAAP), which provide guidelines for the preparation of financial statements, including the standardization of labels and concepts.

Different comapnies may use different reporting styles to indicate Facts in different ways. The use of different labels however affect our ability to efficiently retrieve the appropriate financial data.

The objective here is to generate standardized financial reports of Balance sheet, Income Statement, Cash Flow that so that we can use the same label to perform specific calculation across all companies.

Let's create now a dataframe including the data retrieved from `` company_Facts$facts$`us-gaap` ``.

#### Extracting financial data

The first step is un-nest the dataset, in particular the financial data, in `company_Facts`, nested in various sub-lists.

The following code can be used to un-nest the list within `company_Facts` and create a dataframe easy to visualize and useful for our purpose[^02_data_exploration-2].

[^02_data_exploration-2]: For visualization purpose we have omitted from the printed table below the variables (columns) `df_Facts$description` and `df_Facts$accn`.

```{r unnesting_company_Facts, message=FALSE, warning=FALSE, message=FALSE, class.output="custom-table"}

df_Facts <- FactsList_to_Dataframe(company_Facts$facts$`us-gaap`)

# Select the columns to print out and present the output with wrapped text and formatted numbers
df_Facts %>% select(-c(description,accn)) %>% 
  head() %>% as.data.frame() %>% 
  kable("html") %>% 
  kable_styling(full_width = FALSE)
```

*Note that `df_Facts$val` is expressed in million.*

The data in this dataframe is organized to facilitate analysis and comparison of financial information over different periods. Each row corresponds to a specific financial Concept (e.g. Accounts Payable) reported by the company, and the columns provide details about the reporting period, values, and other relevant attributes.

To recreate a financial statement from the data in `df_Facts` of JAKKS Pacific Inc., we need to extract the values of the various Concepts and corresponding date in `df_Fact$end`.

`df_Fact` has a long list of Concepts for multiple fiscal periods. The following code shows the large number of Concepts included in `df_Fact`, related to all financial reports.

```{r summarize_Facts1, message=FALSE, warning=FALSE, message=FALSE, class.output="custom-str-output"}

# Print the size in human-readable format
cat("df_Facts includes:", format(nrow(df_Facts), units = "auto"), "records \n")
```

From the extract of the `df_Facts` above, we see repeated Concepts. Each of them is associated with a different fiscal period. The code next provides number of unique Concepts used historically JAKKS Pacific Inc. in their financial reports.
```{r summarize_Facts3, message=FALSE, warning=FALSE, message=FALSE, class.output="custom-str-output"}
# Print the number of unique records of df_Facts
df_Facts_distinct <- df_Facts %>% select(label,description) %>% distinct()

cat("df_Facts includes:", format(nrow(df_Facts_distinct), units = "auto"), "distinct Concepts \n")
```

By arranging these records by date indicated in `df_Fact$end` we can see the the full financial reports for each period in a data frame format.

```{r summarize_Facts4, message=FALSE, warning=FALSE, message=FALSE, class.output="custom-table"}
# Group the df_Fact by date in df_Fact$end
df_Facts <- df_Facts %>% arrange(desc(end))

# Show first rows of df_Facts_BS 
df_Facts %>%  select(-c(description,accn)) %>% 
  head() %>% as.data.frame() %>% 
  kable( "html") %>% 
  kable_styling(full_width = FALSE) %>% 
  column_spec(1,width = "250px")
```

The next step is to filter the relevant Concepts associated with each key financial statement: Balance Sheet (BS), Income Statement (IS) Cash Flow (CF).

::: {.Note .custom-note}

------------------------------------------------------------------------

Note

As mentioned in the previous chapter, the `df_Facts` dataframe contains financial data along with corresponding reporting information, such as `df_Facts$end`, `df_Facts$fy`, `df_Facts$fp`, and `df_Facts$form`. However, there are instances where a filing (e.g., 10-K) for a specific fiscal period (`fy` and `fp`) includes a comparison with previous fiscal periods. In these cases, the financial data may actually refer to a different period, as indicated by `df_Facts$end`, rather than the period specified by `fy` and `fp`.

To handle this scenario, we construct a dataframe of financial data based on the end date (`df_Facts$end`) of the reporting period and remove the remaining attributes such as `fy`, `fp`, etc. This ensures that we focus on the actual reporting period for the financial data.


------------------------------------------------------------------------
:::


#### Balance Sheet

The following code will create a standardized Balance Sheet (`df_std_BS`) based on a matching table prepopulated in excel (standardized_balancehseet.xlsx).
There are instances in which the the filing (e.g. 10-K) of a specific fiscal period (`df_Facts$fy` and `df_Facts$fp`) includes a comparison with previous fiscal periods. In these cases we refer to the end date `df_Facts$end` of the reporting period which is associated with the financial data. 

```{r standardized_BS, message=FALSE, warning=FALSE, message=FALSE, class.output="custom-table"}

# Retrieve balance sheet of JAKKS Pacific Inc. in standardized format
# df_std_BS <- bs_std(df_Facts)

# Print the resulting data.frame
# df_std_BS %>% head() %>% as.data.frame() %>%
#   head() %>% as.data.frame() %>% 
#   kable( "html") %>% 
#   kable_styling(full_width = FALSE) %>% 
#   column_spec(1,width = "250px")


```

#### Income Statement

(work in progress ...)

#### Cash Flow

(work in progress ...)